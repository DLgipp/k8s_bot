name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest

    - name: Run flake8 linter
      run: flake8 bot/
    
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

    - name: Run tests
      run: pytest tests/
      env:
        TELEGRAM_API_TOKEN: ${{ secrets.BOT_TOKEN }}


    - name: Build Docker image
      run: docker build -t tg-bot:latest .

    - name: Write service account key to file
      run: echo '${{ secrets.YC_SA_KEY }}' > key.json

    - name: Установить yc CLI
      run: |
         curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
         export PATH="$HOME/yandex-cloud/bin:$PATH"
         echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

    - name: Show key.json contents
      run: cat key.json

    - name: Setup YC CLI config
      run: yc config set service-account-key key.json

    - name: Authenticate to Yandex Cloud
      run: |
        yc config set token ${{ secrets.YC_OAUTH }}
        yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
        yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

    - name: Проверка доступа к YC
      run: yc config list

    - name: Authenticate Docker to Yandex Container Registry
      run: |
        echo ${{ secrets.YC_OAUTH }} | docker login --username oauth --password-stdin cr.yandex

    - name: Tag and push Docker image to Yandex Container Registry
      run: |
        docker tag tg-bot:latest cr.yandex/crpftlpvbpsfqp40g0fu/tg-bot:latest
        docker push cr.yandex/crpftlpvbpsfqp40g0fu/tg-bot:latest

    # Проверка успешности загрузки образа
    - name: Verify image in Yandex Container Registry
      run: |
        yc container image list --registry-id crpftlpvbpsfqp40g0fu

    # Установка kubectl
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Настройка kubeconfig с использованием yc CLI
    - name: Setup kubeconfig
      run: |
        mkdir -p $HOME/.kube
        yc managed-kubernetes cluster get-credentials catqvh3n8u5i7gcj9e11 --external --force
        chmod 600 $HOME/.kube/config

    # Создание секрета для Telegram-бота
    - name: Create Kubernetes secret
      run: |
        kubectl delete secret telegram-bot-secret --ignore-not-found
        kubectl create secret generic telegram-bot-secret \
          --from-literal=telegramToken=${{ secrets.BOT_TOKEN }} \
          --namespace=default --dry-run=client -o yaml | kubectl apply -f -

    # Деплой в Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yaml
        kubectl rollout status deployment/tg-bot --namespace=default